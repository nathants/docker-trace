#!/usr/bin/env bpftrace

// ENTER

tracepoint:syscalls:sys_enter_statfs,
tracepoint:syscalls:sys_enter_readlinkat
/cgroup == cgroupid("/sys/fs/cgroup/system.slice/docker-CONTAINERID.scope")/
{ @filename[tid] = args->pathname; }

tracepoint:syscalls:sys_enter_readlink
/cgroup == cgroupid("/sys/fs/cgroup/system.slice/docker-CONTAINERID.scope")/
{ @filename[tid] = args->path; }

tracepoint:syscalls:sys_enter_chdir,
tracepoint:syscalls:sys_enter_open,
tracepoint:syscalls:sys_enter_openat,
tracepoint:syscalls:sys_enter_statx,
tracepoint:syscalls:sys_enter_newstat,
tracepoint:syscalls:sys_enter_newlstat
/cgroup == cgroupid("/sys/fs/cgroup/system.slice/docker-CONTAINERID.scope")/
{ @filename[tid] = args->filename; }

// EXIT

tracepoint:syscalls:sys_exit_chdir
/cgroup == cgroupid("/sys/fs/cgroup/system.slice/docker-CONTAINERID.scope")/
{ $ret = args->ret; $errno = $ret >= 0 ? 0 : - $ret; printf("chdir %d %s %d %s\n", pid, comm, $errno, str(@filename[tid])); delete(@filename[tid]); }

tracepoint:syscalls:sys_exit_open
/cgroup == cgroupid("/sys/fs/cgroup/system.slice/docker-CONTAINERID.scope")/
{ $ret = args->ret; $errno = $ret >= 0 ? 0 : - $ret; printf("open %d %s %d %s\n", pid, comm, $errno, str(@filename[tid])); delete(@filename[tid]); }

tracepoint:syscalls:sys_exit_openat
/cgroup == cgroupid("/sys/fs/cgroup/system.slice/docker-CONTAINERID.scope")/
{ $ret = args->ret; $errno = $ret >= 0 ? 0 : - $ret; printf("openat %d %s %d %s\n", pid, comm, $errno, str(@filename[tid])); delete(@filename[tid]); }

tracepoint:syscalls:sys_exit_readlink
/cgroup == cgroupid("/sys/fs/cgroup/system.slice/docker-CONTAINERID.scope")/
{ $ret = args->ret; $errno = $ret >= 0 ? 0 : - $ret; printf("readlink %d %s %d %s\n", pid, comm, $errno, str(@filename[tid])); delete(@filename[tid]); }

tracepoint:syscalls:sys_exit_readlinkat
/cgroup == cgroupid("/sys/fs/cgroup/system.slice/docker-CONTAINERID.scope")/
{ $ret = args->ret; $errno = $ret >= 0 ? 0 : - $ret; printf("readlinkat %d %s %d %s\n", pid, comm, $errno, str(@filename[tid])); delete(@filename[tid]); }

tracepoint:syscalls:sys_exit_statfs
/cgroup == cgroupid("/sys/fs/cgroup/system.slice/docker-CONTAINERID.scope")/
{ $ret = args->ret; $errno = $ret >= 0 ? 0 : - $ret; printf("statfs %d %s %d %s\n", pid, comm, $errno, str(@filename[tid])); delete(@filename[tid]); }

tracepoint:syscalls:sys_exit_statx
/cgroup == cgroupid("/sys/fs/cgroup/system.slice/docker-CONTAINERID.scope")/
{ $ret = args->ret; $errno = $ret >= 0 ? 0 : - $ret; printf("statx %d %s %d %s\n", pid, comm, $errno, str(@filename[tid])); delete(@filename[tid]); }

tracepoint:syscalls:sys_exit_newstat
/cgroup == cgroupid("/sys/fs/cgroup/system.slice/docker-CONTAINERID.scope")/
{ $ret = args->ret; $errno = $ret >= 0 ? 0 : - $ret; printf("newstat %d %s %d %s\n", pid, comm, $errno, str(@filename[tid])); delete(@filename[tid]); }

tracepoint:syscalls:sys_exit_newlstat
/cgroup == cgroupid("/sys/fs/cgroup/system.slice/docker-CONTAINERID.scope")/
{ $ret = args->ret; $errno = $ret >= 0 ? 0 : - $ret; printf("newlstat %d %s %d %s\n", pid, comm, $errno, str(@filename[tid])); delete(@filename[tid]); }

// END

END
{ clear(@filename); }
